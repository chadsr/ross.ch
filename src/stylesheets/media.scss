$bp-larger-than-mobile: 'min-width: 400px' !default;
$bp-larger-than-phablet: 'min-width: 550px' !default;
$bp-larger-than-tablet: 'min-width: 750px' !default;
$bp-larger-than-desktop: 'min-width: 1000px' !default;
$bp-larger-than-desktophd: 'min-width: 1200px' !default;

// Mixin function handling all styles related to the cube over different sizes of width/height in pixels
@mixin cubeTransform($size) {
    .perspective {
        perspective: $size * 2;
    }

    #content-cube-wrapper {
        perspective-origin: 50% $size/2;
        transform-origin: 50% 50% (-$size/2);
        transform: translateZ(-$size/2);
    }

    #content-cube {
        width: $size;
        height: $size;

        > .face {
            &.top {
                transform: rotateX(90deg) translateZ($size/2);
            }
            &.front {
                transform: translateZ($size/2);
            }
            &.bottom {
                transform: rotateX(-90deg) translateZ($size/2);
            }
            &.left {
                transform: rotateY(-90deg) translateZ($size/2);
            }
            &.right {
                transform: rotateY(90deg) translateZ($size/2);
            }
            &.back {
                transform: rotateY(180deg) translateZ($size/2);
            }
        }

        &.rotate {
            &-0 {
                transform: rotateY(0deg);
            }
            &-1 {
                transform: rotateY(-90deg);
            }
            &-2 {
                transform: rotateY(-180deg);
            }
            &-3 {
                transform: rotateY(-270deg);
            }
            &-4 {
                transform: rotateX(-270deg);
            }
            &-5 {
                transform: rotateX(-90deg);
            }
        }
    }
}

@mixin elasticNav() {
    nav {
        ul {
            float: none !important;
        }
    }

    nav > ul.fullWidth,
    .social.fullWidth {
        @for $i from 1 through 10 {
            li:first-child:nth-last-child(#{$i}),
            li:first-child:nth-last-child(#{$i}) ~ li {
                width: 100% / $i;
            }
        }
    }
}

@media only screen and (max-width: 806px) {
    @include elasticNav();

    .fullWidth {
        width: 100% !important;
    }

    .halfWidth {
        width: 50% !important;
    }

    .coin {
        float: left;
        position: relative;

        > textarea {
            position: absolute;
            left: 0;
            padding: 4px 10px 4px 28px !important;
        }

        &:hover {
            &::after {
                display: none !important;
            }
        }
    }

    footer {
        max-height: 64px;
    }

    #swipe-indicator {
        display: block;
    }

    nav ul li {
        > a h4 {
            padding: 4px 4px;
        }
    }
}

@media screen and (orientation: landscape) and (max-height: 500px) {
    #crypto,
    #swipe-indicator {
        display: none !important;
    }
}

@media only screen and (min-width: 200px) and (min-height: 300px) {
    @include cubeTransform(200px);
}

@media only screen and (min-width: 250px) and (min-height: 350px) {
    @include cubeTransform(250px);
}

// Larger than mini mobile
@media only screen and (min-width: 300px) and (min-height: 400px) {
    @include cubeTransform(300px);
}

@media only screen and (min-width: 350px) and (min-height: 450px) {
    @include cubeTransform(350px);
}

// Larger than mobile
@media only screen and (min-width: 400px) and (min-height: 500px) {
    @include cubeTransform(400px);
}

@media only screen and (min-width: 450px) and (min-height: 550px) {
    @include cubeTransform(450px);
}

@media only screen and (min-width: 500px) and (min-height: 600px) {
    @include cubeTransform(500px);
}

// Larger than phablet (also point when grid becomes active)
@media only screen and (min-width: 550px) and (min-height: 650px) {
    @include cubeTransform(550px);
}

@media only screen and (min-width: 600px) and (min-height: 700px) {
    @include cubeTransform(600px);
}

@media only screen and (min-width: 650px) and (min-height: 750px) {
    @include cubeTransform(650px);
}

@media only screen and (min-width: 700px) and (min-height: 800px) {
    @include cubeTransform(700px);
}

// Larger than tablet
@media only screen and (min-width: 750px) and (min-height: 850px) {
    @include cubeTransform(700px);
}

@media only screen and (min-width: 800px) and (min-height: 900px) {
    @include cubeTransform(750px);
}

@media only screen and (min-width: 900px) and (min-height: 1000px) {
    @include cubeTransform(850px);
}

// Larger than desktop
@media only screen and (min-width: 1000px) and (min-height: 1100px) {
    @include cubeTransform(900px);
}

@media only screen and (min-width: 1100px) and (min-height: 1200px) {
    @include cubeTransform(1000px);
}

// Larger than Desktop HD
@media only screen and (min-width: 1200px) and (min-height: 1300px) {
    @include cubeTransform(1100px);
    h1 {
        font-size: 7em !important;
    }
}

@media only screen and (min-width: 1300px) and (min-height: 1400px) {
    @include cubeTransform(1200px);
}
