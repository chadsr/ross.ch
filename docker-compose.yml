version: '3.7'

services:
  webapp:
    image: ghcr.io/chadsr/ross.ch:latest
    # build:
    #   context: ./
    #   args:
    #     WORK_DIR: /usr/src/ross.ch
    #     PORT: 8080
    container_name: webapp
    labels:
      io.containers.autoupdate: registry
    restart: unless-stopped
    environment:
      PORT: "${APP_PORT}"
      NODE_ENV: "${APP_ENV}"
      EMAIL_HOST: "${APP_EMAIL_HOST}"
      EMAIL_USERNAME: "${APP_EMAIL_USERNAME}"
      EMAIL_PASSWORD: "${APP_EMAIL_PASSWORD}"
      SENDER_EMAIL_ADDRESS: "${APP_SENDER_EMAIL_ADDRESS}"
      RECV_EMAIL_ADDRESS: "${APP_RECV_EMAIL_ADDRESS}"
      MAX_POSTS: "${APP_MAX_POSTS}"
      MAX_REPOS: "${APP_MAX_REPOS}"
      MEDIUM_USER: "${APP_MEDIUM_USER}"
      GITHUB_USER: "${APP_GITHUB_USER}"
    volumes:
      - web-root:/usr/src/ross.ch/public:rw,z
    networks:
      - webapp

  caddy:
    build:
        context: ./caddy
        dockerfile: Dockerfile
    container_name: caddy
    labels:
      io.containers.autoupdate: registry
    restart: unless-stopped
    environment:
      EMAIL: "${LETSENCRYPT_EMAIL}"
      CLOUDFLARE_EMAIL: "${CLOUDFLARE_EMAIL}"
      CLOUDFLARE_API_KEY: "${CLOUDFLARE_API_KEY}"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - web-root:/var/www/html:ro,z
    ports:
      - 80:80 # needed for Let's Encrypt
      - 443:443
    networks:
      - ghost
      - webapp
      - override
  ghost:
    image: ghost:alpine
    container_name: ghost
    labels:
      io.containers.autoupdate: registry
    restart: unless-stopped
    environment:
      URL: "${BLOG_URL}"
    volumes:
      - /ross.ch/ghost_content:/var/lib/ghost/content:rw,z
    networks:
      - ghost

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: --interval 3600

volumes:
  web-root:
  caddy_data:
  caddy_config:

networks:
  ghost:
  webapp:
  override: