/* Colours */
$color-background: light-dark(rgb(230 230 230), rgb(8 8 8));
$color-background-transparent: light-dark(
    rgb(230 230 230 / 80%),
    rgb(8 8 8 / 60%)
);
$color-content: light-dark(rgb(250 250 250 / 99%), rgb(40 40 40 / 99%));
$content-highlight: light-dark(rgb(118 54 207), rgb(156 89 250));
$gradient-background: linear-gradient(
    to right,
    rgb(108 52 185) 30%,
    $content-highlight 60%,
    rgb(199 35 87) 100%
);
$color-content-secondary: light-dark(rgb(240 240 240), rgb(20 20 20));
$color-content-secondary-highlight: $color-content-secondary;
$color-text: light-dark(#333, white);
$color-text-highlight: $content-highlight;
$color-text-link-highlight: $content-highlight;
$color-text-placeholder: $color-text;
$color-text-placeholder-highlight: $color-text-highlight;
$color-banner-text: white;
$color-banner-background: light-dark(rgb(90 90 90), rgb(25 25 25));
$color-scrollbar-track: $color-content;
$color-scrollbar-thumb: $color-banner-background;
$color-outline: light-dark(rgb(100 100 100 / 40%), rgb(200 200 200 / 20%));
$filter-face-no-focus: brightness(50%);
$color-shadow: rgb(51 51 51 / 50%);
$color-iso: $color-background;
$color-iso-top: $color-iso;
$color-iso-left: $color-iso;
$color-iso-right: $color-iso;
$color-iso-back-left: $color-iso;
$color-iso-back-right: $color-iso;
$color-iso-bottom: $color-iso;
$color-iso-stroke: $content-highlight;
$color-hover-iso-front: $color-background-transparent;
$color-hover-iso-top: $color-hover-iso-front;
$color-hover-iso-left: $color-hover-iso-front;
$color-hover-iso-right: $color-hover-iso-front;
$color-hover-iso-back: rgb(138 65 241 / 20%);
$color-hover-iso-bottom: $color-hover-iso-back;
$color-hover-iso-back-left: $color-hover-iso-back;
$color-hover-iso-back-right: $color-hover-iso-back;
$brightness-threed-top-light: 110%;
$brightness-threed-top-dark: 120%;
$brightness-threed-bottom-light: 90%;
$brightness-threed-bottom-dark: 80%;
$brightness-hover-iso-top: $brightness-threed-top-dark;
$brightness-hover-iso-left: 100%;
$brightness-hover-iso-right: 90%;
$brightness-hover-iso-back: 60%;
$brightness-hover-iso-bottom: 60%;
$color-youtube: rgb(255 0 0);
$color-linkedin: rgb(72 117 180);
$color-github: rgb(71 139 230);
$color-gitlab: rgb(252 109 38);
$color-keybase: rgb(76 142 255);
$color-bluesky: rgb(0 77 170);
$color-gpg: rgb(0 147 221);
$color-success: light-dark(rgb(60 150 60), rgb(64 173 64));
$color-error: light-dark(rgb(150 14 14), rgb(165 24 24));

/* Fonts */
$font-macula: 'Macula';
$font-space-grotesk: 'Space Grotesk Variable';
$font-main: $font-space-grotesk;
$width-icon-button: 48px;
$h1-size: clamp(1.6rem, -0.875rem + 8.333vmin, 4rem);
$h2-size: clamp(1.4rem, -0.875rem + 8.333vmin, 2rem);

/* Other */
$face-content-padding-large: calc(4vmin + 4px);
$threed-height: 100%;
$threed-gap: 48px; // TODO: make this dynamic with threed height
$threed-angle: 60deg;
$outline-size: 1px;
$icon-size: 24px;
$icon-size-social: 18px;

@font-face {
    font-family: $font-macula;
    font-style: normal;
    font-weight: bold;
    font-display: block;
    src:
        url('/fonts/Macula-Solid.woff2') format('woff2'),
        url('/fonts/Macula-Solid.woff') format('woff');
}

@font-face {
    font-family: $font-space-grotesk;
    font-style: normal;
    font-display: swap;
    font-weight: 300 700;
    src: url('/fonts/space-grotesk-latin-wght-normal.woff2')
        format('woff2-variations');
    unicode-range:
        U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,
        U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191,
        U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

:root {
    color-scheme: light dark;
}

/* Extends */
%macula {
    font-family: $font-macula, serif;
    text-transform: uppercase;
}

%grotesk {
    font-family: $font-space-grotesk, sans-serif;
    font-weight: 300;
}

%list {
    margin: 0;
    padding: 0;
    list-style: none;
    box-sizing: border-box;
}

%form-layout {
    width: 100%;
    text-align: center;
    border: none;
    box-shadow: none;
    padding: 0;
    margin: 0;
}

%form-input-style {
    @extend %form-layout;

    font-family: $font-main;
    font-size: 16px;
    background-color: $color-content-secondary;

    &:hover,
    &:focus {
        background-color: $color-content-secondary-highlight;
        outline: none;

        &::placeholder {
            opacity: 0.5;
        }
    }

    &::placeholder {
        @extend %transition-ease-in-out;

        color: $color-text-placeholder;
    }
}

%field-title-style {
    @extend %form-layout;

    display: inline-block;
    background-color: $color-banner-background;
    font-weight: bold;

    @extend %outline-dashed;
}

%no-select {
    -webkit-touch-callout: none;
    user-select: none;
}

%allow-select-text {
    user-select: text;
    -webkit-tap-highlight-color: $content-highlight;
}

%full-screen {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
}

%transition-ease-in-out {
    transition: all 200ms ease-in-out;
}

%threed-side {
    content: '';
    display: block;
    position: absolute;
    height: var(--threed-height);
    transform-style: preserve-3d;
    perspective: inherit;
    perspective-origin: inherit;
    background-color: inherit;
    width: 100%;
    left: 0;
    box-sizing: content-box;

    @extend %outline-dashed;
}

%threed-side-top {
    --threed-height: 100%;

    &::before {
        @extend %threed-side;

        filter: light-dark(
            brightness($brightness-threed-top-light),
            brightness($brightness-threed-top-dark)
        );
        transform: rotateX(calc($threed-angle))
            translate3d(0, -50%, calc(-1 * $outline-size / 2));
        top: calc(-1 * var(--threed-height) * cos($threed-angle));
    }
}

%threed-side-bottom {
    --threed-height: 100%;

    &::after {
        @extend %threed-side;

        filter: light-dark(
            brightness($brightness-threed-bottom-light),
            brightness($brightness-threed-bottom-dark)
        );
        transform: rotateX(calc(-1 * $threed-angle))
            translate3d(0, 50%, calc(-1 * $outline-size / 2));
        top: calc(var(--threed-height) * (cos($threed-angle)));
    }
}

/* Main styles */
::selection {
    background: $content-highlight;
    color: white;
}

html {
    height: 100%;
    min-height: 100%;
    overflow: hidden;
}

body {
    @extend %no-select;

    width: 100%;
    height: 100%;
    font-family: $font-main;
    color: $color-text;
    margin: 0;
    padding: 0;
    overflow: hidden;
    text-align: center;
    text-rendering: geometricprecision;
}

main {
    height: fit-content;
    width: fit-content;
}

.center-container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;

    @extend %full-screen;
}

.center-vertical {
    display: flex;
    align-items: center;
}

@keyframes heading-gradient-animation {
    0% {
        background-position: 0;
    }

    100% {
        background-position: 100%;
    }
}

%gradient-background {
    background: $gradient-background;
    background-clip: text;
    color: transparent;
    background-size: 300% 100%;
}

%gradient-animation {
    animation: heading-gradient-animation 15s linear infinite;
    animation-direction: alternate;
    animation-delay: 0s;
}

.text-gradient {
    @extend %gradient-background;
    @extend %gradient-animation;
}

h1 {
    display: inline-block;
    font-size: $h1-size;
    margin: 0;

    @extend %macula;
}

h2 {
    display: inline-block;
    font-size: $h2-size;

    @extend %macula;

    margin: 0;
}

h3 {
    display: inline-block;
    font-weight: 700;
    padding: 0;
    margin: 0;
}

h4 {
    font-size: 16px;
    margin: 0;
    font-weight: 700;
}

h5 {
    font-weight: 400;
}

p {
    margin: 8px 0;
    font-weight: 400;
}

a {
    color: $color-text;
    text-decoration: none;
    cursor: pointer;

    @extend %transition-ease-in-out;

    &:active {
        outline: none;
    }

    &:focus {
        outline: none;
    }

    &:hover {
        color: $color-text-highlight;
    }
}

strong {
    font-weight: bold;
}

textarea {
    line-height: 32px;
    text-decoration: none;
    margin: 0 0 -4px;

    @extend %form-input-style;
}

li {
    @extend %list;
}

ul {
    @extend %list;
}

.superscript {
    font-size: inherit;
    vertical-align: super;
}

.full-screen {
    @extend %full-screen;
}

.icon {
    display: inline-block;
    width: $icon-size;
    height: $icon-size;
    fill: $color-text;

    @extend %macula;
}

.box-shadow::before {
    content: '';
    position: relative;
    width: 100%;
    top: 2px;
    box-shadow: 0 0 4px 2px rgb(51 51 51 / 50%);
}

button {
    cursor: pointer;
    color: $color-banner-text;
    min-height: 64px;
    width: 100%;
    padding: 0;
    border: none;
    font-weight: bolder;
    font-size: 1em;

    @extend %outline-dashed;
    @extend %grotesk;

    &.hover:hover {
        background-color: $content-highlight;
        outline-color: $content-highlight;
    }

    &.error,
    &.error::before,
    &.error::after,
    &.error:hover {
        background-color: $color-error;
    }

    &.success,
    &.success::before,
    &.success::after,
    &.success:hover {
        background-color: $color-success;
    }
}

form {
    display: contents;
}

fieldset {
    display: contents;

    @extend %form-layout;

    button {
        @extend %field-title-style;

        color: $color-banner-text;
    }
}

.form-inputs {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: $threed-gap;
}

input {
    @extend %form-input-style;
}

nav {
    > ul {
        width: inherit;
        display: flex;
        justify-content: left;
        align-items: flex-start;
        flex-wrap: nowrap;

        > li {
            height: 32px;
            padding: 0 16px;

            &:hover,
            &.selected {
                > a {
                    color: $color-text-highlight;
                }
            }
        }
    }
}

.nav-button {
    display: flex;
    justify-content: center;
    align-items: center;
}

.nav-home {
    font-size: calc(12px + 2vmin);
}

.light {
    color-scheme: light;
}

.dark {
    color-scheme: dark;
}

.text-left {
    text-align: left;
}

.background {
    background-color: $color-background;

    @extend %full-screen;
}

.link {
    font-weight: 700;
    border-bottom: $outline-size dashed $color-text;

    &:hover,
    &:focus {
        color: $color-text-link-highlight;
        border-color: $color-text-link-highlight;
    }
}

.banner {
    height: 32px;
    width: 100%;

    > h4 {
        margin: 4px 10px;
        text-align: center;
    }
}

.title {
    padding: 8px;
}

.site-title {
    color: $color-text;
    z-index: 4;
    position: relative;
    margin: 8px 0;
}

.site-title-link {
    &.hover:hover,
    &.hover:focus {
        > .site-title {
            @extend %gradient-background;
            @extend %gradient-animation;
        }
    }
}

.hidden {
    display: none;
}

.clear {
    clear: both;
}

.inline-block {
    display: inline-block;
}

.inline {
    display: inline;
}

.flex {
    display: flex;
}

.flex-space {
    justify-content: space-between;
}

header,
footer {
    background-color: $color-content;
    width: 100%;
    max-height: 32px;
    height: 32px;
    position: fixed;
    z-index: 3;

    @extend %outline-dashed;
}

header {
    top: 0;
    left: 0;

    @extend %threed-side-bottom;
}

footer {
    bottom: 0;
    left: 0;

    @extend %threed-side-top;
}

.field {
    display: inline-block;
    width: 100%;
    background-color: $color-content-secondary;

    // TODO: get pseudo element height included in the height of this element

    @extend %outline-dashed;

    .title {
        @extend %field-title-style;

        h1,
        h2,
        h3 {
            color: $color-banner-text;
            margin: 8px 4px;
        }
    }

    &.hover:hover,
    &.hover:has(input:focus),
    &.hover:has(textarea:focus) {
        outline-color: $content-highlight;
        background-color: $color-content-secondary-highlight;

        .title {
            background-color: $content-highlight;
            outline-color: $content-highlight;
        }
    }

    &.text-area {
        background-color: transparent;
        outline: none;

        > textarea {
            margin-top: calc(-1 * $outline-size);

            /* offset the textarea to match outline on other input elements */

            background-color: $color-content-secondary;
            width: 100%;
            min-height: 128px;
            box-sizing: border-box;
            resize: vertical;

            @extend %outline-dashed;
        }

        &.hover:hover,
        &.hover:has(textarea:focus) {
            > textarea {
                outline-color: $content-highlight;
                background-color: $color-content-secondary-highlight;
            }
        }
    }

    label.title {
        color: $color-banner-text;
        line-height: 32px;
    }

    input {
        height: 32px;
    }

    > ul {
        padding: 16px;
        display: inline-block;
    }
}

.field-text {
    padding-bottom: 8px;
    margin: 0 16px;
}

ul.social {
    display: flex;
    justify-content: left;
    align-items: flex-start;
    flex-wrap: nowrap;
    height: inherit;

    > .social-li {
        width: $width-icon-button;
        height: inherit;

        > .social-link {
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
            width: 100%;
            height: 100%;

            .social-icon {
                width: $icon-size-social;
                height: $icon-size-social;

                @extend %hover;
            }

            &.youtube {
                &:hover {
                    > .social-icon {
                        fill: $color-youtube;
                    }
                }
            }

            &.linkedin {
                &:hover {
                    > .social-icon {
                        fill: $color-linkedin;
                    }
                }
            }

            &.bluesky {
                &:hover {
                    > .social-icon {
                        fill: $color-bluesky;
                    }
                }
            }

            &.github {
                &:hover {
                    > .social-icon {
                        fill: $color-github;
                    }
                }
            }

            &.gitlab {
                &:hover {
                    > .social-icon {
                        fill: $color-gitlab;
                    }
                }
            }

            &.keybase {
                &:hover {
                    > .social-icon {
                        fill: $color-keybase;
                    }
                }
            }

            &.gpg {
                &:hover {
                    > .social-icon {
                        fill: $color-gpg;
                    }
                }
            }
        }
    }
}

/* Blog and Repositories */
.repo-stars {
    &::before {
        content: '\2605';
        font-size: $icon-size;
        line-height: $icon-size;

        @extend %transition-ease-in-out;
    }
}

.feed-item-tag {
    color: $color-banner-text;
    background-color: $color-banner-background;
    padding: 4px 8px;

    @extend %outline-dashed;
}

.feed-item-date,
.repo-stars {
    gap: 4px;
    display: inline-flex;
    justify-content: center;
    align-items: center;

    > p {
        margin: 0;
    }
}

.feed-item-summary,
.feed-item-info {
    color: $color-text;
    margin: 0;
}

.feed-item-info {
    display: flex;
    flex-flow: wrap;
    align-items: center;
    gap: 8px;
    justify-content: center;
    text-align: center;
    font-size: 14px;
    line-height: 14px;
    margin-top: 8px;
}

.feed-item-tags {
    padding: 8px;
}

.post {
    max-width: 80ch;
    overflow: hidden;

    > .post-header {
        background-color: $color-banner-background;
        color: $color-banner-text;

        @extend %outline-dashed;

        .icon {
            width: 12px;
            height: 12px;
        }

        > .post-stats {
            padding: 0 0 8px;

            > .post-stats-item {
                margin-bottom: 4px;
                display: flex;
                justify-content: center;
                align-items: center;
                gap: 8px;
            }
        }
    }

    > .post-content {
        display: flex;
        flex-direction: column;
        position: relative;
        background-color: $color-content;
        height: calc(100% - $h1-size - $h2-size - 128px);

        @extend %outline-dashed;

        top: calc(-1 * $outline-size);

        > .post-text {
            flex-grow: 1;
            padding: 8px 16px;
            text-align: left;

            @extend %allow-select-text;
        }
    }
}

.feed {
    width: inherit;
    display: flex;
    flex-grow: 1;
    justify-content: start;
    flex-direction: column;
    gap: 48px 32px;

    > .feed-item {
        .icon {
            @extend %hover;
        }

        &.hover:hover {
            .feed-item-title,
            .feed-item-tag {
                background-color: $content-highlight;
            }

            .repo-stars::before {
                color: $content-highlight;
            }

            .feed-item-summary,
            .feed-item-info {
                color: $color-text;
            }

            .icon {
                fill: $content-highlight;
            }
        }

        .feed-item-content {
            padding: 8px 16px 16px;
        }
    }
}

/* Escher cube background styles */
.isobg {
    z-index: 0;

    @extend %full-screen;
}

@keyframes iso-dash {
    from {
        stroke-dashoffset: 0%;
    }

    to {
        stroke-dashoffset: 50%;
    }
}

%stroke-network {
    stroke: $color-iso-stroke;
    stroke-dasharray: 4pt, 0, 0, 100px;
    stroke-width: 2pt;
    stroke-linejoin: round;
    stroke-linecap: round;
    will-change: stroke-dashoffset;
}

%stroke-network-animation {
    animation: iso-dash 30s linear;
    animation-iteration-count: infinite;
    animation-direction: alternate;
}

%outline-dashed {
    outline: $outline-size dashed $color-outline;
    outline-offset: calc(-1 * $outline-size);
}

%scrollable {
    overflow: hidden auto;
    scroll-behavior: smooth;
    scrollbar-width: auto;

    &::-webkit-scrollbar-track {
        background: $color-scrollbar-track;
    }

    &::-webkit-scrollbar {
        width: 12px;
        background: $color-scrollbar-track;
    }

    &::-webkit-scrollbar-thumb {
        background: $color-scrollbar-thumb;

        &:hover,
        &:active {
            background: $content-highlight;
        }
    }
}

%hover {
    cursor: pointer;

    @extend %transition-ease-in-out;
}

.scrollable {
    @extend %scrollable;
}

.hover {
    @extend %hover;
}

.iso {
    > .iso-face {
        stroke-opacity: 0;

        @extend %outline-dashed;
        @extend %stroke-network;
        @extend %transition-ease-in-out;
    }

    > .iso-left {
        fill: $color-iso-left;
    }

    > .iso-right {
        fill: $color-iso-right;
    }

    > .iso-top {
        fill: $color-iso-top;
    }

    > .iso-back-left {
        fill: $color-iso-back-left;
    }

    > .iso-back-right {
        fill: $color-iso-back-right;
    }

    > .iso-bottom {
        fill: $color-iso-bottom;
    }

    &:hover {
        > .iso-face {
            stroke-opacity: 1;

            @extend %stroke-network-animation;
        }

        > .iso-left {
            fill: $color-hover-iso-left;
            filter: brightness($brightness-hover-iso-left);
        }

        > .iso-right {
            fill: $color-hover-iso-right;
            filter: brightness($brightness-hover-iso-right);
        }

        > .iso-top {
            fill: $color-hover-iso-top;
            filter: brightness($brightness-hover-iso-top);
        }

        > .iso-back-left {
            fill: $color-hover-iso-back-left;
            filter: brightness($brightness-hover-iso-back);
        }

        > .iso-back-right {
            fill: $color-hover-iso-back-right;
            filter: brightness($brightness-hover-iso-back);
        }

        > .iso-bottom {
            fill: $color-hover-iso-bottom;
            filter: brightness($brightness-hover-iso-bottom);
        }
    }
}

@mixin rotate-faces($deg) {
    .face-front {
        transform: rotateY($deg);
    }

    .face-left {
        transform: rotateY(-90deg + $deg);
    }

    .face-right {
        transform: rotateY(90deg + $deg);
    }

    .face-back {
        transform: rotateY(180deg + $deg);
    }

    .face-top {
        transform: rotateX(90deg) rotateZ(-$deg);
    }

    .face-bottom {
        transform: rotateX(-90deg) rotateZ($deg);
    }
}

.content-cube {
    position: relative;
    transform-style: preserve-3d;
    backface-visibility: hidden;

    &.rotate {
        &-0 {
            @include rotate-faces(0deg);
        }

        &-1 {
            @include rotate-faces(-90deg);
        }

        &-2 {
            @include rotate-faces(-180deg);
        }

        &-3 {
            @include rotate-faces(-270deg);
        }
    }

    > .face {
        width: 100%;
        height: 100%;
        position: absolute;
        transform-style: preserve-3d;
        will-change: transform, filter;
        transition-property: transform, filter;
        transition-timing-function: ease-in-out;
        transition-duration: 500ms;
        outline-offset: 0;
        filter: $filter-face-no-focus;
        background-color: $color-content;

        @extend %outline-dashed;

        &.face-top {
            filter: brightness($brightness-hover-iso-top);
        }

        > .face-content {
            display: flex;
            justify-content: space-between;
            flex-direction: column;
            height: 100%;
            padding: $face-content-padding-large;
            box-sizing: border-box;
            pointer-events: none;
            background-color: $color-content;
            visibility: hidden;
            transition: visibility 1s;
            transition-behavior: allow-discrete;
            will-change: visibility;
            contain-intrinsic-size: none;
            content-visibility: visible;

            @extend %scrollable;

            .title-section > h1 {
                @extend %gradient-background;
            }

            .title-section > h2 {
                font-size: $h1-size;
            }

            > .content-section {
                display: flex;
                flex-grow: 1;
                flex-direction: column;
                align-items: center;
                justify-content: space-between;
                gap: $threed-gap;
                width: 100%;
                word-wrap: break-word;
                overflow-wrap: break-word;

                ul.list {
                    display: block;

                    li {
                        padding: 8px 0 0;
                        width: 100%;
                        text-align: left;
                        display: flex;
                        flex-flow: column wrap;
                        overflow-wrap: break-word;

                        p {
                            display: flex;
                            align-items: center;
                            justify-content: left;
                            margin: 0;
                            word-wrap: auto;
                            width: 100%;

                            &::before {
                                @extend %macula;

                                content: '>';
                                padding: 0 8px 0 0;
                                font-size: 32px;
                            }
                        }

                        > ul {
                            padding: 0 0 0 24px;
                            max-width: 100%;

                            > li {
                                padding: 0 0 8px;

                                p::before {
                                    font-size: 32px;
                                }
                            }
                        }
                    }
                }

                > .description {
                    margin-bottom: 32px;
                }
            }
        }

        &.focus {
            filter: none;
            background-color: transparent;
            z-index: 4;

            > .face-content {
                transform: translateZ(0);
                pointer-events: auto;
                visibility: visible;

                .title-section > h1 {
                    // Only enable animation when in focus
                    @extend %gradient-animation;
                }
            }
        }
    }
}

.perspective {
    transform-style: preserve-3d;

    &.threed-top {
        @extend %threed-side-top;
    }

    &.threed-bottom {
        @extend %threed-side-bottom;
    }
}

button.threed-top {
    margin-top: 16px;

    &:active {
        transform: scale3d(0.95, 0.95, 1);
    }
}

@mixin content-cube($size) {
    $perspective-multiplier: 2;

    .perspective {
        perspective: calc($size * $perspective-multiplier);
        perspective-origin: top;
    }

    .content-cube {
        $cube-margin: 64px;

        width: $size;
        height: $size;

        $top-angle-radians: calc(90deg * (pi / 180));

        margin: calc(
                $cube-margin + ($size * $perspective-multiplier) *
                    (sin($top-angle-radians))
            )
            0 $cube-margin;

        .face {
            transform-origin: center center calc(-1 * ($size / 2));
        }
    }
}

@include content-cube(80vmin);

/* Max out the cube size after 1080px */
@media only screen and (width >=1080px) and (height >=1080px) {
    @include content-cube(1000px);

    .work-feed {
        display: grid;
        grid-auto-rows: 1fr;
        grid-template-columns: repeat(2, 1fr);
    }
}

@mixin elastic-nav() {
    nav > ul.full-width,
    .social.social.full-width {
        @for $i from 1 through 10 {
            li:first-child:nth-last-child(#{$i}),
            li:first-child:nth-last-child(#{$i}) ~ li {
                width: calc(100% / $i);
            }
        }
    }
}

@media only screen and (width <=806px) {
    @include elastic-nav;

    .scrollable,
    .face-content {
        &::-webkit-scrollbar {
            width: 8px;
        }
    }
}
